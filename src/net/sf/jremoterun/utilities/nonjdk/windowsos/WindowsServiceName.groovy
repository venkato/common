package net.sf.jremoterun.utilities.nonjdk.windowsos

import groovy.transform.CompileStatic
import net.sf.jremoterun.utilities.nonjdk.enumutils.EnumNameProvider

/**
 * @see net.sf.jremoterun.utilities.nonjdk.winutils.WinCmdUtils#stopService
 */
@CompileStatic
enum WindowsServiceName implements EnumNameProvider{


    BthAvctpSvc( 'AVCTP service' ) ,
    AxInstSV( 'ActiveX Installer (AxInstSV)' ) ,
    //AarSvc_?????( 'Agent Activation Runtime_?????' ) ,
    AJRouter( 'AllJoyn Router Service' ) ,
    AppReadiness( 'App Readiness' ) ,
    AppXSvc( 'AppX Deployment Service (AppXSVC)' ) ,
    AppIDSvc( 'Application Identity' ) ,
    Appinfo( 'Application Information' ) ,
    ALG( 'Application Layer Gateway Service' ) ,
    AppMgmt( 'Application Management' ) ,
    AssignedAccessManagerSvc( 'AssignedAccessManager Service' ) ,
    Tzautoupdate( 'Auto Time Zone Updater' ) ,
    BITS( 'Background Intelligent Transfer Service' ) ,
    BrokerInfrastructure( 'Background Tasks Infrastructure Service' ) ,
    BFE( 'Base Filtering Engine' ) ,
    BDESVC( 'BitLocker Drive Encryption Service' ) ,
    Wbengine( 'Block Level Backup Engine Service' ) ,
    BTAGService( 'Bluetooth Audio Gateway Service' ) ,
    Bthserv( 'Bluetooth Support Service' ) ,
    //BluetoothUserService_?????( 'Bluetooth User Support Service_?????' ) ,
    PeerDistSvc( 'BranchCache' ) ,
    KeyIso( 'CNG Key Isolation' ) ,
    EventSystem( 'COM+ Event System' ) ,
    COMSysApp( 'COM+ System Application' ) ,
    Camsvc( 'Capability Access Manager Service' ) ,
    //CaptureService_?????( 'CaptureService_?????' ) ,
    Autotimesvc( 'Cellular Time' ) ,
    CertPropSvc( 'Certificate Propagation' ) ,
    ClipSVC( 'Client License Service (ClipSVC)' ) ,
    //Cbdhsvc_?????( 'Clipboard User Service_?????' ) ,
    CDPSvc( 'Connected Devices Platform Service' ) ,
    //CDPUserSvc_?????( 'Connected Devices Platform User Service_?????' ) ,
    DiagTrack( 'Connected User Experiences and Telemetry' ) ,
    //ConsentUxUserSvc_?????( 'ConsentUX_?????' ) ,
    //PimIndexMaintenanceSvc_?????( 'Contact Data_?????' ) ,
    CoreMessagingRegistrar( 'CoreMessaging' ) ,
    VaultSvc( 'Credential Manager' ) ,
    //CredentialEnrollmentManagerUserSvc_?????( 'CredentialEnrollmentManagerUserSvc_?????' ) ,
    CryptSvc( 'Cryptographic Services' ) ,
    DcomLaunch( 'DCOM Server Process Launcher' ) ,
    Dhcp( 'DHCP Client' ) ,
    Dnscache( 'DNS Client' ) ,
    DsSvc( 'Data Sharing Service' ) ,
    DusmSvc( 'Data Usage' ) ,
    DoSvc( 'Delivery Optimization' ) ,
    DevQueryBroker( 'DevQuery Background Discovery Broker' ) ,
    DeviceAssociationService( 'Device Association Service' ) ,
    DeviceInstall( 'Device Install Service' ) ,
    DmEnrollmentSvc( 'Device Management Enrollment Service' ) ,
    Dmwappushservice( 'Device Management Wireless Application Protocol (WAP) Push message Routing Service' ) ,
    DsmSvc( 'Device Setup Manager' ) ,
    //DeviceAssociationBrokerSvc_?????( 'DeviceAssociationBroker_?????' ) ,
    //DevicePickerUserSvc_?????( 'DevicePicker_?????' ) ,
    //DevicesFlowUserSvc_?????( 'DevicesFlow_?????' ) ,
    Diagsvc( 'Diagnostic Execution Service' ) ,
    DPS( 'Diagnostic Policy Service' ) ,
    WdiServiceHost( 'Diagnostic Service Host' ) ,
    WdiSystemHost( 'Diagnostic System Host' ) ,
    DialogBlockingService( 'DialogBlockingService' ) ,
    DisplayEnhancementService( 'Display Enhancement Service' ) ,
    DispBrokerDesktopSvc( 'Display Policy Service' ) ,
    TrkWks( 'Distributed Link Tracking Client' ) ,
    MSDTC( 'Distributed Transaction Coordinator' ) ,
    MapsBroker( 'Downloaded Maps Manager' ) ,
    Embeddedmode( 'Embedded Mode' ) ,
    EFS( 'Encrypting File System (EFS)' ) ,
    EntAppSvc( 'Enterprise App Management Service' ) ,
    Eaphost( 'Extensible Authentication Protocol' ) ,
    Fhsvc( 'File History Service' ) ,
    FdPHost( 'Function Discovery Provider Host' ) ,
    FDResPub( 'Function Discovery Resource Publication' ) ,
    //BcastDVRUserService_?????( 'GameDVR and Broadcast User Service_?????' ) ,
    Lfsvc( 'Geolocation Service' ) ,
    GraphicsPerfSvc( 'GraphicsPerfSvc' ) ,
    Gpsvc( 'Group Policy Client' ) ,
    HvHost( 'HV Host Service' ) ,
    Hidserv( 'Human Interface Device Service' ) ,
    Vmickvpexchange( 'Hyper-V Data Exchange Service' ) ,
    Vmicguestinterface( 'Hyper-V Guest Service Interface' ) ,
    Vmicshutdown( 'Hyper-V Guest Shutdown Service' ) ,
    Vmicheartbeat( 'Hyper-V Heartbeat Service' ) ,
    Vmicvmsession( 'Hyper-V PowerShell Direct Service' ) ,
    Vmicrdv( 'Hyper-V Remote Desktop Virtualization Service' ) ,
    Vmictimesync( 'Hyper-V Time Synchronization Service' ) ,
    Vmicvss( 'Hyper-V Volume Shadow Copy Requestor' ) ,
    IKEEXT( 'IKE and AuthIP IPsec Keying Modules' ) ,
    Iphlpsvc( 'IP Helper' ) ,
    IpxlatCfgSvc( 'IP Translation Configuration Service' ) ,
    PolicyAgent( 'IPsec Policy Agent' ) ,
    SharedAccess( 'Internet Connection Sharing (ICS)' ) ,
    KtmRm( 'KtmRm for Distributed Transaction Coordinator' ) ,
    LxpSvc( 'Language Experience Service' ) ,
    Lltdsvc( 'Link-Layer Topology Discovery Mapper' ) ,
    Wlpasvc( 'Local Profile Assistant Service' ) ,
    LSM( 'Local Session Manager' ) ,
    //MessagingService_?????( 'MessagingService_?????' ) ,
    //Diagnosticshub.standardcollector.service( 'Microsoft (R) Diagnostics Hub Standard Collector Service' ) ,
    Wlidsvc( 'Microsoft Account Sign-in Assistant' ) ,
    AppVClient( 'Microsoft App-V Client' ) ,
    MsKeyboardFilter( 'Microsoft Keyboard Filter' ) ,
    NgcSvc( 'Microsoft Passport' ) ,
    NgcCtnrSvc( 'Microsoft Passport Container' ) ,
    Swprv( 'Microsoft Software Shadow Copy Provider' ) ,
    Smphost( 'Microsoft Storage Spaces SMP' ) ,
    InstallService( 'Microsoft Store Install Service' ) ,
    SmsRouter( 'Microsoft Windows SMS Router Service.' ) ,
    MSiSCSI( 'Microsoft iSCSI Initiator Service' ) ,
    NaturalAuthentication( 'Natural Authentication' ) ,
    //NetMsmqActivator/ NetPipeActivator/NetTcpActivator( 'Net.Msmq/Net.Pipe/Net.Tcp Listener Adapter' ) ,
    //Â ( 'Net.Tcp Port Sharing Service' ) ,
    Netlogon( 'Netlogon' ) ,
    NcdAutoSetup( 'Network Connected Devices Auto-Setup' ) ,
    NcbService( 'Network Connection Broker' ) ,
    Netman( 'Network Connections' ) ,
    NcaSvc( 'Network Connectivity Assistant' ) ,
    Netprofm( 'Network List Service' ) ,
    NlaSvc( 'Network Location Awareness' ) ,
    NetSetupSvc( 'Network Setup Service' ) ,
    Nsi( 'Network Store Interface Service' ) ,
    CscService( 'Offline Files' ) ,
    //Ssh-agent( 'OpenSSH Authentication Agent' ) ,
    Defragsvc( 'Optimize drives' ) ,
    PNRPAutoReg( 'PNRP Machine Name Publication Service' ) ,
    WpcMonSvc( 'Parental Controls' ) ,
    SEMgrSvc( 'Payments and NFC/SE Manager' ) ,
    PNRPsvc( 'Peer Name Resolution Protocol' ) ,
    P2psvc( 'Peer Networking Grouping' ) ,
    P2pimsvc( 'Peer Networking Identity Manager' ) ,
    PerfHost( 'Performance Counter DLL Host' ) ,
    Pla( 'Performance Logs & Alerts' ) ,
    PhoneSvc( 'Phone Service' ) ,
    PlugPlay( 'Plug and Play' ) ,
    WPDBusEnum( 'Portable Device Enumerator Service' ) ,
    Power( 'Power' ) ,
    Spooler( 'Print Spooler' ) ,
   // PrintWorkflowUserSvc_?????( 'PrintWorkflow_?????' ) ,
    PrintNotify( 'Printer Extensions and Notifications' ) ,
    Wercplsupport( 'Problem Reports and Solutions Control Panel Support' ) ,
    PcaSvc( 'Program Compatibility Assistant Service' ) ,
    QWAVE( 'Quality Windows Audio Video Experience' ) ,
    RpcEptMapper( 'RPC Endpoint Mapper' ) ,
    RmSvc( 'Radio Management Service' ) ,
    TroubleshootingSvc( 'Recommended Troubleshooting Service' ) ,
    RasAuto( 'Remote Access Auto Connection Manager' ) ,
    RasMan( 'Remote Access Connection Manager' ) ,
    SessionEnv( 'Remote Desktop Configuration' ) ,
    TermService( 'Remote Desktop Services' ) ,
    UmRdpService( 'Remote Desktop Services UserMode Port Redirector' ) ,
    RpcSs( 'Remote Procedure Call (RPC)' ) ,
    RpcLocator( 'Remote Procedure Call (RPC) Locator' ) ,
    RemoteRegistry( 'Remote Registry' ) ,
    RetailDemo( 'Retail Demo Service' ) ,
    RemoteAccess( 'Routing and Remote Access' ) ,
    RuntimeBroker( 'Runtime Broker' ) ,
    SNMPTRAP( 'SNMP Trap' ) ,
    SSDPSRV( 'SSDP Discovery' ) ,
    Seclogon( 'Secondary Logon' ) ,
    SstpSvc( 'Secure Socket Tunneling Protocol Service' ) ,
    SamSs( 'Security Accounts Manager' ) ,
    Wscsvc( 'Security Center' ) ,
    SensorDataService( 'Sensor Data Service' ) ,
    SensrSvc( 'Sensor Monitoring Service' ) ,
    SensorService( 'Sensor Service' ) ,
    LanmanServer( 'Server' ) ,
    Shpamsvc( 'Shared PC Account Manager' ) ,
    ShellHWDetection( 'Shell Hardware Detection' ) ,
    SCardSvr( 'Smart Card' ) ,
    ScDeviceEnum( 'Smart Card Device Enumeration Service' ) ,
    SCPolicySvc( 'Smart Card Removal Policy' ) ,
    Sppsvc( 'Software Protection' ) ,
    SharedRealitySvc( 'Spatial Data Service' ) ,
    Svsvc( 'Spot Verifier' ) ,
    StateRepository( 'State Repository Service' ) ,
    WiaRpc( 'Still Image Acquisition Events' ) ,
    StorSvc( 'Storage Service' ) ,
    TieringEngineService( 'Storage Tiers Management' ) ,
  //  OneSyncSvc_?????( 'Sync Host_?????' ) ,
    SysMain( 'SysMain' ) ,
    SENS( 'System Event Notification Service' ) ,
    SystemEventsBroker( 'System Events Broker' ) ,
    SgrmBroker( 'System Guard Runtime Monitor Broker' ) ,
    Lmhosts( 'TCP/IP NetBIOS Helper' ) ,
    Schedule( 'Task Scheduler' ) ,
    TapiSrv( 'Telephony' ) ,
    Themes( 'Themes' ) ,
    TimeBrokerSvc( 'Time Broker' ) ,
    TabletInputService( 'Touch Keyboard and Handwriting Panel Service' ) ,
    Upnphost( 'UPnP Device Host' ) ,
    UsoSvc( 'Update Orchestrator Service' ) ,
   // UserDataSvc_?????( 'User Data Access_?????' ) ,
 //   UnistoreSvc_?????( 'User Data Storage_?????' ) ,
    UevAgentService( 'User Experience Virtualization Service' ) ,
    UserManager( 'User Manager' ) ,
    ProfSvc( 'User Profile Service' ) ,
    Vds( 'Virtual Disk' ) ,
    VSS( 'Volume Shadow Copy' ) ,
    VacSvc( 'Volumetric Audio Compositor Service' ) ,
    WlanSvc( 'WLAN AutoConfig' ) ,
    WmiApSrv( 'WMI Performance Adapter' ) ,
    WwanSvc( 'WWAN AutoConfig' ) ,
    WalletService( 'WalletService' ) ,
    WarpJITSvc( 'WarpJITSvc' ) ,
    TokenBroker( 'Web Account Manager' ) ,
    WebClient( 'WebClient' ) ,
    WFDSConMgrSvc( 'Wi-Fi Direct Services Connection Manager Service' ) ,
    WinHttpAutoProxySvc( 'WinHTTP Web Proxy Auto-Discovery Service' ) ,
    Audiosrv( 'Windows Audio' ) ,
    AudioEndpointBuilder( 'Windows Audio Endpoint Builder' ) ,
    SDRSVC( 'Windows Backup' ) ,
    WbioSrvc( 'Windows Biometric Service' ) ,
    FrameServer( 'Windows Camera Frame Server' ) ,
    Wcncsvc( 'Windows Connect Now - Config Registrar' ) ,
    Wcmsvc( 'Windows Connection Manager' ) ,
    Sense( 'Windows Defender Advanced Threat Protection Service' ) ,
    WdNisSvc( 'Windows Defender Antivirus Network Inspection Service' ) ,
    WinDefend( 'Windows Defender Antivirus Service' ) ,
    Mpssvc( 'Windows Defender Firewall' ) ,
    WEPHOSTSVC( 'Windows Encryption Provider Host Service' ) ,
    WerSvc( 'Windows Error Reporting Service' ) ,
    Wecsvc( 'Windows Event Collector' ) ,
    EventLog( 'Windows Event Log' ) ,
    FontCache( 'Windows Font Cache Service' ) ,
    Stisvc( 'Windows Image Acquisition (WIA)' ) ,
    Wisvc( 'Windows Insider Service' ) ,
    Msiserver( 'Windows Installer' ) ,
    LicenseManager( 'Windows License Manager Service' ) ,
    Winmgmt( 'Windows Management Instrumentation' ) ,
    WManSvc( 'Windows Management Service' ) ,
    WMPNetworkSvc( 'Windows Media Player Network Sharing Service' ) ,
    MixedRealityOpenXRSvc( 'Windows Mixed Reality OpenXR Service' ) ,
    Icssvc( 'Windows Mobile Hotspot Service' ) ,
    TrustedInstaller( 'Windows Modules Installer' ) ,
    Spectrum( 'Windows Perception Service' ) ,
    Perceptionsimulation( 'Windows Perception Simulation Service' ) ,
  //  FontCache3.0.0.0( 'Windows Presentation Foundation Font Cache 3.0.0.0' ) ,
    WpnService( 'Windows Push Notifications System Service' ) ,
 //   WpnUserService_?????( 'Windows Push Notifications User Service_?????' ) ,
    PushToInstall( 'Windows PushToInstall Service' ) ,
    WinRM( 'Windows Remote Management (WS-Management)' ) ,
    WSearch( 'Windows Search' ) ,
    SecurityHealthService( 'Windows Security Service' ) ,
    W32Time( 'Windows Time' ) ,
    Wuauserv( 'Windows Update' ) ,
    WaaSMedicSvc( 'Windows Update Medic Service' ) ,
    Dot3svc( 'Wired AutoConfig' ) ,
    Workfolderssvc( 'Work Folders' ) ,
    LanmanWorkstation( 'Workstation' ) ,
    XboxGipSvc( 'Xbox Accessory Management Service' ) ,
    XblAuthManager( 'Xbox Live Auth Manager' ) ,
    XblGameSave( 'Xbox Live Game Save' ) ,
    XboxNetApiSvc( 'Xbox Live Networking Service' ) ,


    ;

    String customName;

    WindowsServiceName(String name1) {
        customName = name1
    }
}
